package nd.edu.mapresearch;

/**
 * Created by JoaoGuilherme on 7/16/2015.
 */
public class Utils {


    /* Strings used as fields for the PlaceObject data model
    * Use this instead of typing in quotes to prevent errors!*/
    public static final String PLACE_OBJECT = "PlaceObject"; //Name of data model
    public static final String PLACE_OBJECT_GROUP = "group"; //Group of the event
    public static final String PLACE_OBJECT_ICON = "icon"; //icon of the event
    public static final String PLACE_OBJECT_LOCATION = "location"; //ParseGeoPoint containing the coordinates of the event
    public static final String PLACE_OBJECT_NOTES = "notes"; //Notes typed by user
    public static final String PLACE_OBJECT_MINUTES = "minutes"; //Number of minutes to exist specified by creator
    public static final String PLACE_OBJECT_USERNAME = "username"; // Username of the creator
    public static final String PLACE_OBJECT_USERID = "userid"; // Userid of the creator
    public static final String PLACE_OBJECT_VOTES = "votes"; // Number of votes of the event
    public static final String PLACE_OBJECT_VOTERS_LIST = "votersList"; // List with usernames of who voted
    public static final String PLACE_OBJECT_EXPIRED = "expired"; // Boolean if it has expired or not
    /* Strings used as fields for the MessageData data model
    * Use this instead of typing in quotes to prevent errors!*/
    public static final String MESSAGE_DATA = "MessageData";//Name of Message Data model
    public static final String MESSAGE_DATA_SENDER = "sender"; //String with username of sender
    public static final String MESSAGE_DATA_RECEIVER = "receiver"; //String with username of receiver
    public static final String MESSAGE_DATA_TEXT = "text"; //String with the message
    public static final String MESSAGE_DATA_READ = "read"; //Boolean if message was read or not
    /* Strings used as fields for the UserData data model
    * Use this instead of typing in quotes to prevent errors!*/
    public static final String USER_DATA = "UserData"; // Name of user data model
    public static final String USER_DATA_USERNAME = "username"; // String with username
    public static final String USER_DATA_PASSWORD_HASH = "passwordhash"; // String with password hash
    public static final String USER_DATA_USER_ID = "id"; // "String with ID generated by parse
    /* Strings used as fields for the editor
    * Use this instead of typing in quotes to prevent errors!*/
    public static final String EDITOR_PREVIOUS_USERNAME = "PreviousUsername"; // String with username of last logged in user
    public static final String EDITOR_PREVIOUS_PASSWORD_HASH = "PreviousPasswordHash"; // String with password hash of last logged in user
    public static final String EDITOR_PREVIOUS_USER_ID = "PreviousUserID"; // String of ID of last logged in user

    final static CharSequence[] eventsPlotted ={"Bear",
            "Buffalo",
            "Deer",
            "Police",
            "Major Accident",
            "Minor Accident",
            "Construction",
            "Traffic",
            "Building",
            "Tire",
            "Tree",
            "Truck Stopped",
            "Help"
    };

    public static String[] reportDialog = {
            "Animals",
            "Road Obstacles",
            "Police",
            "Accidents",
            "Help",
            "GPS"
    };

    public static int[] imageID = {
            R.mipmap.bear,
            R.mipmap.roadopstical,
            R.mipmap.police,
            R.mipmap.minoraccident,
            R.mipmap.help,
            R.mipmap.gps
    };

    public static String[] animalDialog = {
            "Bear",
            "Buffalo",
            "Deer"
    };

    public static int[] animalImageID = {
            R.mipmap.bear,
            R.mipmap.buffalo,
            R.mipmap.deer
    };

    public static String[] roadObstacleDialog = {
            "Construction",
            "Traffic",
            "Truck Stopped",
            "Tree"
    };

    public static int[] roadObstacleImageID = {
            R.mipmap.construction,
            R.mipmap.traffic,
            R.mipmap.truckstopped,
            R.mipmap.tree
    };

    public static String[] policeDialog = {
            "Police"
    };
    //Radar maybe
    public static int[] policeImageID = {
            R.mipmap.police
    };

    public static String[] accidentDialog = {
            "Major Accident",
            "Minor Accident",
            "Tire"
    };

    public static int[] accidentImageID = {
            R.mipmap.majoraccident,
            R.mipmap.minoraccident,
            R.mipmap.tire
    };

    /*
    Takes coordinates a and b and calculates the disntance between them
    Slightly modified from:
    http://www.codecodex.com/wiki/Calculate_Distance_Between_Two_Points_on_a_Globe
    */
    public static double distanceAtoB(double lat_a, double lng_a, double lat_b, double lng_b )
    {
        double earthRadius = 3958.75;
        double latDiff = Math.toRadians(lat_b-lat_a);
        double lngDiff = Math.toRadians(lng_b-lng_a);
        double a = Math.sin(latDiff /2) * Math.sin(latDiff /2) +
                Math.cos(Math.toRadians(lat_a)) * Math.cos(Math.toRadians(lat_b)) *
                        Math.sin(lngDiff /2) * Math.sin(lngDiff /2);
        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        double distance = earthRadius * c;


        return new Double(distance).doubleValue();
    }

    public static float distanceAtoB(float lat_a, float lng_a, float lat_b, float lng_b )
    {
        double earthRadius = 3958.75;
        double latDiff = Math.toRadians(lat_b-lat_a);
        double lngDiff = Math.toRadians(lng_b-lng_a);
        double a = Math.sin(latDiff /2) * Math.sin(latDiff /2) +
                Math.cos(Math.toRadians(lat_a)) * Math.cos(Math.toRadians(lat_b)) *
                        Math.sin(lngDiff /2) * Math.sin(lngDiff /2);
        double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        double distance = earthRadius * c;


        return new Float(distance).floatValue();


    }
}
